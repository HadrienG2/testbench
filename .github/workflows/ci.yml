# There are two kinds of continuous integration jobs in this project:
#
# - Every code submission or master push passes continuous integration on the
#   minimal supported Rust version and the current stable Rust version.
# - Two times a month, a scheduled job makes sure that the code remains
#   compatible and lint-free on upcoming Rust toolchains (beta and nightly).
#
# The Cargo registry and index are not cached because they are not used for this
# tiny crate, which has no dependencies.

on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 1,15 * *'

name: Continuous Integration

env:
  RUSTFLAGS: -D warnings

jobs:
  # Formatter output and lints don't depend on the operating system, and only
  # need to be tested on the latest supported release of each CI run.
  check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache stable toolchain and target directory
        if: github.event_name != 'schedule'
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/stable-*
            ~/.rustup/update-hashes/stable-*
            target
          key: check

      - name: Install stable toolchain
        if: github.event_name != 'schedule'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt,clippy

      # NOTE: Not caching toolchains or target directories on unstable runs,
      #       since the cache will always be invalidated.

      - name: Install nightly toolchain
        if: github.event_name == 'schedule'
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt,clippy

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

      - name: Type-check the program
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Check clippy lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings


  # Run the tests on all supported OSes and stable Rust versions (main CI)
  test-stable:
    if: github.event_name != 'schedule'

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        rust:
          - stable
          - 1.34.0  # Minimum supported Rust version

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Cache toolchain and target directory
        uses: actions/cache@v2
        with:
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains/${{ matrix.rust }}-*
            ~/.rustup/update-hashes/${{ matrix.rust }}-*
            target
          key: test-${{ matrix.os }}-${{ matrix.rust }}

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run basic tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run concurrent tests and benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release -- --ignored --nocapture --test-threads=1


  # Run the tests on upcoming Rust versions (scheduled CI)
  #
  # FIXME: There should be a way to use conditional build matrices without
  #        duplicating the whole job recipe...
  #
  test-unstable:
    if: github.event_name == 'schedule'

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        rust:
          - beta
          - nightly

    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # NOTE: Not caching toolchains or target directories on unstable runs,
      #       since the cache will always be invalidated.

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true

      - name: Run basic tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Run concurrent tests and benchmarks
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --release -- --ignored --nocapture --test-threads=1
